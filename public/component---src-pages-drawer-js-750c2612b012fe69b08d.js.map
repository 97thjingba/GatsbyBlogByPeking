{"version":3,"sources":["webpack:///./src/pages/drawer.js"],"names":["useStyles","makeStyles","list","width","fullList","TemporaryDrawer","classes","_React$useState","React","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","_Object$assign","type","key","Object","assign","sideList","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","role","onClick","onKeyDown","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_5__","map","text","index","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_7__","button","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_MoveToInbox__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Mail__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_9__","primary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_3__","onClose","anchor"],"mappings":"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","file":"component---src-pages-drawer-js-750c2612b012fe69b08d.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nexport default function TemporaryDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (side, open) => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [side]: open });\n    };\n\n    const sideList = side => (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    const fullList = side => (\n        <div\n            className={classes.fullList}\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            <Button onClick={toggleDrawer('left', true)}>Open Left</Button>\n            <Button onClick={toggleDrawer('right', true)}>Open Right</Button>\n            <Button onClick={toggleDrawer('top', true)}>Open Top</Button>\n            <Button onClick={toggleDrawer('bottom', true)}>Open Bottom</Button>\n            <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n                {sideList('left')}\n            </Drawer>\n            <Drawer anchor=\"top\" open={state.top} onClose={toggleDrawer('top', false)}>\n                {fullList('top')}\n            </Drawer>\n            <Drawer anchor=\"bottom\" open={state.bottom} onClose={toggleDrawer('bottom', false)}>\n                {fullList('bottom')}\n            </Drawer>\n            <Drawer anchor=\"right\" open={state.right} onClose={toggleDrawer('right', false)}>\n                {sideList('right')}\n            </Drawer>\n        </div>\n    );\n}"],"sourceRoot":""}