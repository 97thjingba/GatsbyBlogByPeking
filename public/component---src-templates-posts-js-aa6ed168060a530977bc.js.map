{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/Header.js","webpack:///./src/style/cardStyle.js","webpack:///./src/templates/posts.js","webpack:///./src/components/Footer/Footer.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react_default","a","createElement","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","options","sectionClassName","anchors","scrollBar","arrowNavigation","navigation","Header","_this","_Component","call","this","state","gatsby_browser_entry_StaticQuery","Helmet","lang","site","siteMetadata","title","name","content","description","react_fullpage_lgy","id","className","_3003573360","Component","useStyles","makeStyles","theme","card","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","NavLink","test","text","gatsby_link_default","to","url","IndexPage","pathContext","group","index","first","last","previousUrl","pageCount","toString","nextUrl","classes","components_Header_Header","components","allMarkdownRemark","totalCount","map","_ref2","node","key","Card","fields","slug","CardHeader","Avatar","aria-label","action","IconButton","MoreVert_default","subheader","CardMedia","image","frontmatter","childImageSharp","fluid","src","CardContent","Typography","variant","color","component","CardActions","disableSpacing","Favorite_default","Share_default","posts_NavLink","Footer","react__WEBPACK_IMPORTED_MODULE_1___default","class","href","react_icons_fa__WEBPACK_IMPORTED_MODULE_3__","size","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname"],"mappings":"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","file":"component---src-templates-posts-js-aa6ed168060a530977bc.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport \"./layout.css\";\nimport { Helmet } from \"react-helmet\";\nimport { SectionsContainer, Section } from \"react-fullpage-lgy\";\n\nlet options = {\n    sectionClassName: \"section\",\n    anchors: [\"one\"],\n    scrollBar: false,\n    arrowNavigation: true,\n    navigation: false\n};\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <StaticQuery\n                query={graphql`\n                            query {\n                                site {\n                                siteMetadata {\n                                    title\n                                    description\n                                }\n                                }\n                            }\n                            `}\n                render={data => (\n                    <body>\n                        <Helmet>\n                            <html lang=\"en\" />\n                            <title>{data.site.siteMetadata.title}</title>\n                            <meta\n                                name=\"description\"\n                                content={data.site.siteMetadata.description}\n                            />\n                        </Helmet>\n                        <div>\n                            <SectionsContainer {...options}>\n                                <Section id=\"slide\">\n                                    <div className=\"center\">\n                                        <h1 className=\"has-text-white title title_position\">\n                                            LGY'S blog - by GATSBY\n                                        </h1>\n                                    </div>\n                                </Section>\n                            </SectionsContainer>\n                        </div>\n                    </body>\n                )}\n            />\n        );\n    }\n}\n\nexport default Header;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        maxWidth: 414,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nexport default useStyles;","import React from \"react\";\nimport Header from \"../components/Header/Header\";\nimport { Link, graphql } from \"gatsby\";\nimport { Section, SubTitle, Media, Content, Title } from \"reactbulma\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport \"./posts.css\";\nimport useStyles from \"../style/cardStyle\";\nimport Footer from \"../components/Footer/Footer\";\n\nconst NavLink = props => {\n    if (!props.test) {\n        return (\n            <Link to={props.url} id=\"navlink\" className=\"has-text-primary\">\n                {props.text}\n            </Link>\n        );\n    } else {\n        return <span>{props.text}</span>;\n    }\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 50)\n        }\n      }\n    }\n  }\n`;\n\nconst IndexPage = ({ data, pathContext }) => {\n    const { group, index, first, last, pageCount } = pathContext;\n    const previousUrl = index - 1 == 1 ? \"\" : (index - 1).toString();\n    const nextUrl = (index + 1).toString();\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Header />\n            <Section className=\"hero is-fullheight has-background-light\">\n                <div className=\"container\">\n                    <p className=\"center  index_title_style\">lgy的小博客</p>\n                    <SubTitle className=\"center index_title_style\">\n                        Record every day of life\n                    </SubTitle>\n                    <div>\n                        <h4 className=\"center\">\n                            {data.allMarkdownRemark.totalCount}篇小文章\n                        </h4>\n                        <div className=\"columns is-multiline\">\n                            {group.map(({ node }) => (\n                                <div className=\"column is-one-third\">\n                                    <div key={node.id} className=\"blog_style\">\n                                        <Card className={classes.card}>\n                                            <Link to={node.fields.slug}>\n                                                <CardHeader\n                                                    avatar={\n                                                        <Avatar\n                                                            aria-label=\"Recipe\"\n                                                            className={classes.avatar}\n                                                        >\n                                                            R\n                                                        </Avatar>\n                                                    }\n                                                    action={\n                                                        <IconButton aria-label=\"Settings\">\n                                                            <MoreVertIcon />\n                                                        </IconButton>\n                                                    }\n                                                    title=\"Shrimp and Chorizo Paella\"\n                                                    subheader=\"September 14, 2016\"\n                                                />\n                                                <CardMedia\n                                                    className={classes.media}\n                                                    image={\n                                                        node.frontmatter.image.childImageSharp.fluid.src\n                                                    }\n                                                    title=\"Paella dish\"\n                                                />\n                                                <CardContent>\n                                                    <Typography\n                                                        variant=\"body2\"\n                                                        color=\"textSecondary\"\n                                                        component=\"p\"\n                                                    >\n                                                        This impressive paella is a perfect party dish and a\n                                                        fun meal to cook together with your guests. Add 1\n                                                        cup of frozen peas along with the mussels, if you\n                                                        like.\n                                                    </Typography>\n                                                </CardContent>\n                                                <CardActions disableSpacing>\n                                                    <IconButton aria-label=\"Add to favorites\">\n                                                        <FavoriteIcon />\n                                                    </IconButton>\n                                                    <IconButton aria-label=\"Share\">\n                                                        <ShareIcon />\n                                                    </IconButton>\n                                                </CardActions>\n                                            </Link>\n                                        </Card>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"pagination\" id=\"pagination\">\n                    <NavLink test={first} url={previousUrl} text=\"<<<上一页\" />\n                    <NavLink test={last} url={nextUrl} text=\"下一页>>>\" />\n                </div>\n            </Section>\n            <Footer />\n        </div>\n    );\n};\nexport default IndexPage;\n","import React,{Component} from \"react\"\nimport {Container} from \"reactbulma\";\nimport { FaGithub, FaTencentWeibo } from 'react-icons/fa';\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <footer class=\"footer\">\n                <div class=\"content has-text-centered\">\n                    <p>\n                        <p className=\"subtitle has-text-black is-7\">永远年轻,永远热泪盈眶.   —— Jack Kerouac 《达摩流浪者》</p>\n                        <p className=\"has-text-primary subtitle is-6\">Build with gatsby -- by Peking</p>\n                        <a href=\"https://github.com/97thjingba/blog_gatsby\"><FaGithub size=\"1.5rem\" /></a>\n                    </p>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}